# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 0.1.0.{build}

#---------------------------------#
#    environment configuration    #
#---------------------------------#

#Publish to PowerShell Gallery with this key
environment:
  NuGetApiKey:
    secure: 8fzPA9jCuntNmDKjf/RWRvEQuqqsuMNJ7ywZ2hIWnbrETAWc9JtW3PnhEhnRXaIU

# Allow WMF5 (i.e. PowerShellGallery functionality)
image: WMF 5

# scripts that are called at very beginning, before repo cloning
# init:
#   - ps:

install:
  - ps: Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force | Out-Null
  - ps: Install-Module Pester, Psake, PlatyPS, PSDeploy, PSScriptAnalyzer, BuildHelpers -Repository PSGallery -Force | Out-Null
  - ps: Import-Module Pester, Psake, PlatyPS, PSDeploy, PSScriptAnalyzer, BuildHelpers -Force | Out-Null

#---------------------------------#
#       build configuration       #
#---------------------------------#

build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

test_script:
  - ps: .\build.ps1 -Task Publish
      # $testResultsFile = ".\TestsResults.xml"
      # $tempModulePath = (Resolve-Path (join-path $pwd '..')).ProviderPath
      # $env:PSModulePath = "$env:PSModulePath;$tempModulePath"
      # $res = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru
      # (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
      # if ($res.FailedCount -gt 0) {
      #     throw "$($res.FailedCount) tests failed."
      # }

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# scripts to run before deployment
deploy: off



#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:

# on build failure
on_failure:

# after build failure or success
on_finish:

#---------------------------------#
#         notifications           #
#---------------------------------#

# notifications:
